<div id="fb-root"></div>

<!--_article_interact -->

<div class="spinner_modal"></div>

<div id='contents' class='row'>
  <div class='span8'>

    <h2 id = 'article_headline'>
    </h2>

    <!--<img id = 'article_image'/> -->


    <!--<div id='article_author'>
    </div> -->

    <div id = 'article_source'>
    </div>

    <div id = 'article_content'>
    </div>
  
  </div>

  <!-- Overall Comment section at the top --> 

  <div class='right_section_container span4'>

    <!-- Comment Container -->
    <center>
      <strong>Discussion</strong>   
    </center>
    <br/>

    <div id='first_overall_comment' class=' '>
      <center>
   
        <div class='comment_element'>
          <div class='first_comment_place_holder_class'>
            <strong>
               Start a discussion about this article!
            </strong>    
          </div>
        </div>
      </center>    
    </div>

    <div id='all_comments_container' class=' overall_comments_display'>
    </div>
    
    <div id='overall_comment_input_area' class=' overall_comment_input'>
      <center>

        <% if user_signed_in? %>
          <textarea id="overall_comment_input_field" rows="2" style="margin: 0px; width: 200px; height: 38px; resize: none;"></textarea>
      
          <button onclick="comment_overall_submit()" class='btn btn-primary' type='button'>Add</button>
        

        <% else %>
          <div class="add_padding_to_center_login">
            Please <%= link_to "sign up or login ", user_omniauth_authorize_path(:facebook)  %> to add to this discussion
          </div>
          

        <% end %>

      </center>   
    </div>
  </div> 

  <!-- Share container -->
  <div class='right_section_container span4'>

    <div class="center_full_width">
      <span class="icon-share" title="Share this article and your comments"></span>
        <strong>Start a discussion with this article</strong>
      
    </div>
    
    <br/>  

    <center>
      <div class='article_view_icon_class'>
        <!-- Facebook share -->
        <a onClick='facebook_wall_post()'>
               
            <span class="icon-facebook" title="Share on facebook"></span>
        </a>

        <a onClick='email_article()'>
          <span class="icon-emailalt" title="Email this article to your friend"></span>
        </a>

      
      </div>
    </center>
    
    <br/>

    <strong> URL to Article</strong> <span title="Send this URL to start a discussion" class="icon-question-sign"></span>
    
    <br/>   
    
    <textarea id="article_url_to_share" rows="1" wrap="off" style="margin: 0px; width: 250px; height: 20px; resize: none; "></textarea>   
    
    <br/>
  
  </div>

</div>

<div class='add_spacer_to_move_content_up span12'>
</div>


<script>

  var article  = new Object() 
  article.url = ''
  article.image_url = ''

  var current_user = new Object()

  <% if user_signed_in? %>
    var user_signed_in_status = true
    var enable_selection = true 
    current_user.firstname = '<%= current_user.firstname %>'
    current_user.lastname = '<%= current_user.lastname %>'

  <% else %>
    var user_signed_in_status = false
    var enable_selection = false 
    current_user.firstname = ''
    current_user.lastname = ''

  <% end %>

  <%= yield %>
  // Finished getting article from the server

  // Enabling commenting
  var ids = new Array();
  var all_comments = new Array()
  var new_comment = '';


  function finished_loading()
  {
    
    console.log(article)
    //Original Article Info
    
    // Original Article URL
    
    var article_url_html = ''
    article_url_html += '<br/>'
    article_url_html += '<a href ="'
    article_url_html += article.original_url + '">'
    article_url_html += 'Original Article'
    article_url_html += '</a>'

    $('#article_source').append(article_url_html)
    

    //Sharing URLs
    $('#article_url_to_share').val(article.url)
  }


  // keep track of unique groups
  var group_comment_id = 0;

  var reveal_comments_boolean = true

  // get user highlight
  function enable_commenting()
  {

    $('span.selectable').mouseup(function(event)
    {       
      var selectable_class_present = true

      if(enable_selection)
      {
        ids = new Array();

        userSelection = window.getSelection();
        rangeObject = userSelection.getRangeAt(0);
        if (rangeObject.startContainer == rangeObject.endContainer) 
        {   
            ids[0] = rangeObject.startContainer.parentNode.id

            if ($('#' + ids[0]).hasClass('selectable'))
            {
              selectable_class_present = true
            }
            else
            {
              selectable_class_present = false
            }

        } 
        else 
        {   
          ids = getAllBetween(
              rangeObject.startContainer.parentNode,
              rangeObject.endContainer.parentNode)

          if (ids == 'overlap')
          {
            
            selectable_class_present = false
          }
      
        }
         
        if(selectable_class_present)
        {
          create_inline_comment_input_dialogue()
        }
        else
        {
          alert('Sorry, but you cannot add a comment to existing comment area or to a link')
        }

      }  
    });
  }

  function getAllBetween(firstEl,lastEl) 
  {
    var selectable_class_present_in_multiple = true

    var firstElement = $(firstEl); // First Element
    var lastElement = $(lastEl); // Last Element
    var collection = new Array(); // Collection of Elements
    collection.push(firstElement.attr('id')); // Add First Element to Collection
    $(firstEl).nextAll().each(function()
    { // Traverse all siblings
        if ($(this).hasClass('selectable') == false)
        {
          selectable_class_present_in_multiple = false
        }

        else
        {
          var siblingID  = $(this).attr('id'); // Get Sibling ID
          if (siblingID != $(lastElement).attr('id')) 
          { // If Sib is not LastElement
              collection.push($(this).attr('id')); // Add Sibling to Collection
          } 
          else 
          { // Else, if Sib is LastElement
              collection.push(lastElement.attr('id')); // Add Last Element to Collection
              return false; // Break Loop
          }
        }
    });         
    
    if (selectable_class_present_in_multiple)
    { 
      return collection; // Return Collection
    }
    else
    {
      return 'overlap'
    }
  }

  function create_inline_comment_input_dialogue()
  {
    enable_selection = false
    
    //Color background
    for(x in ids)
    {
      $(('#' + ids[x])).css('background', 'yellow')
    }
    
    var p = $('#' + ids[ids.length -1]);
    var offset = p.offset();

    // Insert comment dialogue
    create_comment_input_html()

    $('.comment_in_line_input').css({'left': offset.left})
  }

  // ************ Comment Submissions ***********

  function comment_inline_submit()
  {

    new_comment = new Object()
    new_comment.content = $('#comment_inline_input_field').val().linkify()

    new_comment.article_id = article.id

    new_comment.comment_location_ids = JSON.stringify(ids)
    new_comment.comment_type = 'in_line'

    group_comment_id++

    new_comment.group_comment_id = group_comment_id


    comment_submit(new_comment) 
    //all_comments.push(new_comment)
    $('.comment_in_line_input').remove()

    enable_selection = true
  }

  function comment_overall_submit()
  {

    var comment_to_submit = new Object()
    comment_to_submit.content = $('#overall_comment_input_field').val().linkify()
    comment_to_submit.comment_type = 'overall_comment'
    comment_to_submit.article_id = article.id

    //add function
    comment_submit(comment_to_submit)


    $('#overall_comment_input_field').val('')
  }

  function comment_inline_reply_submit(comment_group)
  {
    
    var comment_to_submit = new Object()
    comment_to_submit.content = $('#inline_comment_input_' + comment_group).val().linkify()
    comment_to_submit.comment_type = 'in_line'
    comment_to_submit.article_id = article.id
    comment_to_submit.group_comment_id = comment_group

    comment_submit(comment_to_submit)

    enable_selection = true
  }
 
  // adds the comment to the server
  function comment_submit(comment)
  {
    
    post_request = new Object()
    post_request = comment

    console.log(comment)

    $.post("/comment/new_comment", post_request).done(function(data)
    {
      get_comments()

    })
  }

  // ************ Get Comments and Render them ***********
  
  function get_comments()
  {
    var get_request = new Object()
    get_request.article_id = article.id

    var url = '/comment/get_article_comments'

    $.get(url, get_request).done(function(data) 
      { 
        all_comments = data


        // turn ids into a JSON object
        for(var x in all_comments)
        {

          all_comments[x].comment_location_ids = $.parseJSON(all_comments[x].comment_location_ids)

          if (all_comments[x].comment_type != 'overall_comment')
          { 
            group_comment_id = all_comments[x].group_comment_id
          }
        }
        get_users()
      })
  }

  function get_users()
  {
    var url = '/user/info'
    var get_request = new Object()

    var count = 0;

    all_comments.forEach(function(comment)
    {
      get_request.user_id = comment.user_id

      $.get(url, get_request).done(function(data) 
      {

        comment.user_info = data
        count++
        
        if(count == (all_comments.length))
        { 
            render_comments()
        }         
      })
    })
  }
  
  function render_comments()
  {

    var iterate = 0

    var first_overall_comment_boolean = true;

    $('#all_comments_container').children().remove()

    all_comments.forEach(function(comment)
    {

      if (comment.comment_type == 'in_line')
      {
        create_in_line_comment_html(comment)
        bind_in_line_comments_to_hover(comment, iterate)

      }

      if (comment.comment_type == 'overall_comment')
      {
        if (first_overall_comment_boolean)
        {
          first_overall_comment_boolean = false;
          create_first_overall_comments(comment)
        }
        else
        {
          create_overall_comments(comment)
        }
      }

      iterate++
    })

    collapse_long_threads()
    scroll_to_bottom_of_in_line()
    deactiva_selection_when_inline_shown()
  }

  function deactiva_selection_when_inline_shown()
  {

    $('.comment_inline_comment_container').on(
        {mouseenter: function()
          { 
            enable_selection = false;  
          },
          mouseleave: function()
          {
            if (user_signed_in_status)
            {
              enable_selection = true;
            }
          }
        })
  }

  function scroll_to_bottom_of_in_line()
  {
    
    $('.comment_inline_view_comments').each(function()
    {
      $(this).scrollTop(3000)
    })
  }

  function collapse_long_threads()
  {

    var num_children = $(".overall_comments_display").children().length

    if(num_children > 2 && reveal_comments_boolean)
    {
      $(".overall_comments_display").children().not(':gt(' + (num_children - 3) + ')').css('display', 'none')

      var reveal_collapse = '<a onclick="reveal_comments()"> Show All Comments </a>'

      $(".overall_comments_display").prepend(reveal_collapse)

    }
  }

  // For hiding more than 3 overall comments
  function reveal_comments()
  {

    var num_children = $(".overall_comments_display").children().length

    if (reveal_comments_boolean == true)
    {
      $(".overall_comments_display").children().css('display', '')
     
      reveal_comments_boolean = false

      $(".overall_comments_display").children('a').text('Hide Comments')
    }

    else
    {
      $(".overall_comments_display").children().not('a').not(':gt(' + (num_children - 4) + ')').css('display', 'none')

      reveal_comments_boolean = true

      $(".overall_comments_display").children('a').text('Show All Comments')   
    } 
  }

  function create_first_overall_comments(comment_element)
  {
    
    var comment_to_add = create_comment_element_html(comment_element)

    $('#first_overall_comment').html(comment_to_add)
  }

  function create_overall_comments(comment_element)
  {
    
    var comment_to_add = create_comment_element_html(comment_element)

    $('#all_comments_container').append(comment_to_add)
  }

  function create_in_line_comment_html(comment_element)
  {
    comment_show_html = ''
    
    if (comment_element.comment_location_ids != null)
    {
      // Create a new comment group

      $('#' + comment_element.comment_location_ids[0]).children().remove()

      comment_show_html += $('#' + comment_element.comment_location_ids[0]).text()

      // Overall comment dialogue box
      comment_show_html += '<div id=\'comment_' + comment_element.group_comment_id + '\' ' 
      comment_show_html += 'class=\'comment_inline_comment_container\'>'

        // Container for comments
        comment_show_html += '<div' 
        comment_show_html += ' class=\'comment_inline_view_comments\'>'
        comment_show_html += '</div>'

        // inline comment reply submit
      
      <% if user_signed_in? %>
        
        comment_show_html += add_reply_button_to_in_line_comment_group(comment_element)

      <% else %>
        comment_show_html += add_please_sign_up_to_inline()
      
      <% end %>

      comment_show_html += '</div>'

      $('#' + comment_element.comment_location_ids[0]).html(comment_show_html)

      // Place Comment Content
      var comment_to_add = create_comment_element_html(comment_element)

      $('#comment_' + comment_element.group_comment_id + ' div.comment_inline_view_comments').prepend(comment_to_add)

      //Paint the span
      for(x in comment_element.comment_location_ids)
      {
        $('#' + comment_element.comment_location_ids[x]).css('background', 'yellow')
        $('#' + comment_element.comment_location_ids[x]).css('text-decoration', 'underline')

        $('#' + comment_element.comment_location_ids[x]).removeClass("selectable")

      }
    }
    
    // add to group of comments
    else 
    {
      var comment_to_add = create_comment_element_html(comment_element)

      $('#comment_' + comment_element.group_comment_id + ' div.comment_inline_view_comments').append(comment_to_add)
    }
  }

  function bind_in_line_comments_to_hover(comment_element)
  {

    if (comment_element.comment_location_ids != null)
    {
      var marker = comment_element.group_comment_id
      //Position the comment
      $('#comment_' + marker).css({'left': $('#' + comment_element.comment_location_ids[0]).offset().left
          })
      
      // bind all elements

      for(var x in comment_element.comment_location_ids)
      {

        $('#' + comment_element.comment_location_ids[x]).on(
        {mouseenter: function()
          { 
            var first_item = comment_element
            $('#comment_' + marker).css({
              'visibility': 'visible'})
              
          },
          mouseleave: function()
          {
            var marker = comment_element.group_comment_id
              $('#comment_' + marker).css('visibility', 'hidden')

          }
        })
      }
    }
  }

  function create_comment_input_html()
  {
    var inline_comment_input_dialogue_html = ''
    
    inline_comment_input_dialogue_html += '<div' 
    inline_comment_input_dialogue_html += ' class = \'comment_in_line_input\'>'
      
      inline_comment_input_dialogue_html += 'Comment on the highlighted section'

      inline_comment_input_dialogue_html += '<div' 
      inline_comment_input_dialogue_html += ' class = \'comment_in_line_text_area\'>'
   
        inline_comment_input_dialogue_html += '<textarea id="comment_inline_input_field" rows="3" style="margin: 0px; width: 220px; height: 60px; resize: none;">'
        inline_comment_input_dialogue_html += '</textarea>'

      inline_comment_input_dialogue_html += '</div>'
      

      inline_comment_input_dialogue_html += '<button onclick="comment_inline_submit()" class=\'btn btn-primary \' type=\'button\'>'
    
      inline_comment_input_dialogue_html += 'Add Comment'
      
      inline_comment_input_dialogue_html += '</button>'

      inline_comment_input_dialogue_html += '<button onclick="comment_inline_cancel()"' 
      inline_comment_input_dialogue_html += 'class=\'btn btn-info add_margin_left\' type=\'button\'>'
      inline_comment_input_dialogue_html += 'Cancel</button>'
    
    inline_comment_input_dialogue_html += '</div>'
    
    $('#' + ids[ids.length -1]).append(inline_comment_input_dialogue_html);
  }

  // Creates the individual comments for overall and inline
  function create_comment_element_html(comment_element)
  {

    var comment_to_add = ''
    
    comment_to_add += '<div class="comment_element">'

      comment_to_add += '<img class=\'profile_image_in_comment\' src=\''

        comment_to_add += comment_element.user_info.profile_image_url
      comment_to_add += '\'/>'


      comment_to_add += '<table class="comment_table">'
        comment_to_add += '<tr>'
          comment_to_add += '<td>'
            comment_to_add += '<strong>'

            comment_to_add += comment_element.user_info.firstname

            comment_to_add += '</strong>'
            comment_to_add += ' says:'


              comment_to_add += '<div class="comment_time">'

              comment_to_add += $.timeago(comment_element.created_at)

              comment_to_add += '</div>'       

          comment_to_add += '</td>'
        comment_to_add += '</tr>'

        comment_to_add += '<tr>'
          comment_to_add += '<td >'
            comment_to_add += '<div class=\'comment_text\'>'

              comment_to_add += comment_element.content

            comment_to_add += '</div>'
          comment_to_add += '</td>'
        comment_to_add += '</tr>'
      comment_to_add += '</table>'

    comment_to_add += '</div>'

    return comment_to_add
  }

  function comment_inline_cancel()
  {
    $('.comment_in_line_input').remove()

    for(x in ids)
    {
        $(('#' + ids[x])).css('background', 'white')
    }

    enable_selection = true
  }
  
  function add_reply_button_to_in_line_comment_group(comment_element)
  {

    var reply_section = ''

    reply_section += '<div class="add_padding" >'

      reply_section += '<textarea id="inline_comment_input_' + comment_element.group_comment_id + '"'

      reply_section += ' class="in_line_comment_text_field add_margin" '

      reply_section += 'rows="1" style="margin: 0px; resize: none;">'

      reply_section += '</textarea>'
      reply_section += '<button onclick="comment_inline_reply_submit('

      reply_section += comment_element.group_comment_id

      reply_section += ')" class="btn btn-primary add_margin_left" type="button">Reply</button>'
    
    reply_section += '</div>'

    return reply_section
  }

  function add_please_sign_up_to_inline()
  {
    var html_to_add = ''

    html_to_add += '<center>'

    html_to_add += 'Please ' 
    html_to_add += '<%= link_to "sign up or login ", user_omniauth_authorize_path(:facebook)  %>'  

    html_to_add += ' to reply'

    html_to_add += '</center>'

    return html_to_add
  }

  function facebook_wall_post()
  {

    var caption = get_first_overall_comment()

    if (!caption)
    {
      caption = 'What do you think of this?'

    }

    <% if user_signed_in? %>    

    var facebook_headline = current_user.firstname + "'s thougths on " + "'" + article.headline + "'"

    <% else %>
      
      var facebook_headline = article.headline 
    
    <% end %>

    FB.init(
    {
      appId:'<%= ENV['FACEBOOK_APP_ID'] %>',
      cookie:false,
      status:true
    });
     
    FB.ui(
    {
      method: 'feed',
      link: article.url,
      picture: article.image_url,
      name: facebook_headline,
      caption: caption.content,
      description: 'Read and discuss this article with my thoughts embedded in the article',
      to: '', 
    }, 
    function(response)
    {
      console.log(response)

    });
  }

  function email_article()
  {
    // Setup email params
    var caption = get_first_overall_comment()

    if (!caption)
    {
      caption = 'What do you think of this?'

    }

    else
    {
      caption = current_user.firstname + " posed this question: " + "%0d" + "%09" + caption.content + "%0d" + "%0d" + 'What do you think of this?'

    }

    <% if user_signed_in? %>    

    var email_headline = current_user.firstname + "'s thougths on " + "'" + article.headline + "'"

    <% else %>
      
      var email_headline = article.headline 
    
    <% end %>


    //setup mailto functionality 
    var mailToUrl = ""

    mailToUrl += "mailto:?to="

    // Subject Text
    mailToUrl += "&subject="
    mailToUrl += email_headline

    // Body Text
    mailToUrl += "&body="

    mailToUrl += "Hi, %0d %0d"

    <% if user_signed_in? %>    

      mailToUrl += caption
    
    <% end %>

    mailToUrl += " - %0d" + "%09" + article.headline
    mailToUrl += "- ( " + article.url + " )"

    // Closing Text
    mailToUrl += "%0d" + "%0d" + "%0d"
    mailToUrl += "Share your thoughts and start discussion using Read With Me - " + '<%= ENV['domain'] %>'

    window.location.href = mailToUrl
  }

  function get_first_overall_comment()
  {
    var comment_to_send

    all_comments.forEach(function(comment)
    {

      if (comment.comment_type == 'overall_comment')
      {
        console.log(comment)
        comment_to_send = comment
        console.log(comment)
      }
    })

    return comment_to_send
  }


</script>
